Random Sampling
Training parameters: {'LOG_DIR': '../logs', 'dataset': 'cars', 'sz_embedding': 512, 'sz_batch': 128, 'nb_epochs': 60, 'gpu_id': 0, 'nb_workers': 0, 'model': 'googlenet', 'loss': 'TripletPCA', 'optimizer': 'adamw', 'lr': 0.0001, 'weight_decay': 0.0001, 'lr_decay_step': 20, 'lr_decay_gamma': 0.5, 'alpha': 32, 'mrg': 0.1, 'IPC': None, 'warm': 1, 'bn_freeze': 1, 'l2_norm': 1, 'remark': ''}
Training for 60 epochs.
0it [00:00, ?it/s]Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.1.1\plugins\python-ce\helpers\pydev\pydevd.py", line 1438, in _exec
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2020.1.1\plugins\python-ce\helpers\pydev\_pydev_imps\_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "C:/Users/Juhyeon/Desktop/repository/Proxy-Anchor-CVPR2020/code/train.py", line 292, in <module>
    for batch_idx, (x, y) in pbar:                         
  File "C:\Users\Juhyeon\anaconda3\envs\torch17\lib\site-packages\tqdm\_tqdm.py", line 897, in __iter__
    for obj in iterable:
  File "C:\Users\Juhyeon\anaconda3\envs\torch17\lib\site-packages\torch\utils\data\dataloader.py", line 435, in __next__
    data = self._next_data()
  File "C:\Users\Juhyeon\anaconda3\envs\torch17\lib\site-packages\torch\utils\data\dataloader.py", line 475, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "C:\Users\Juhyeon\anaconda3\envs\torch17\lib\site-packages\torch\utils\data\_utils\fetch.py", line 44, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "C:\Users\Juhyeon\anaconda3\envs\torch17\lib\site-packages\torch\utils\data\_utils\fetch.py", line 44, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "C:\Users\Juhyeon\Desktop\repository\Proxy-Anchor-CVPR2020\code\dataset\base.py", line 38, in __getitem__
    im = img_load(index)
  File "C:\Users\Juhyeon\Desktop\repository\Proxy-Anchor-CVPR2020\code\dataset\base.py", line 31, in img_load
    im = corrupt(im, corruption_name='gaussian_noise', severity=1)
  File "C:\Users\Juhyeon\anaconda3\envs\torch17\lib\site-packages\imagenet_c\__init__.py", line 29, in corrupt
    x_corrupted = corruption_dict[corruption_name](Image.fromarray(x), severity)
  File "C:\Users\Juhyeon\anaconda3\envs\torch17\lib\site-packages\PIL\Image.py", line 2482, in fromarray
    return frombuffer(mode, size, obj, "raw", rawmode, 0, 1)
  File "C:\Users\Juhyeon\anaconda3\envs\torch17\lib\site-packages\PIL\Image.py", line 2435, in frombuffer
    return frombytes(mode, size, data, decoder_name, args)
  File "C:\Users\Juhyeon\anaconda3\envs\torch17\lib\site-packages\PIL\Image.py", line 2368, in frombytes
    im.frombytes(data, decoder_name, args)
  File "C:\Users\Juhyeon\anaconda3\envs\torch17\lib\site-packages\PIL\Image.py", line 796, in frombytes
    s = d.decode(data)
TypeError: a bytes-like object is required, not 'JpegImageFile'
Backend Qt5Agg is interactive backend. Turning interactive mode on.
